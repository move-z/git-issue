name: Release

on:
  push:
    branches: [ "9-setup-ci-pipeline" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  set-version-file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Calculate version
        run: |
          echo version=$GITHUB_HEAD_REF | sed s%release/%% >> $GITHUB_ENV

      - name: Set version
        run: sed 's/^version = ".*"/version = "{{ env.version }}"/' Cargo.toml

      - name: Save Cargo.toml
        uses: actions/upload-artifact@v3
        with:
          name: Cargo.toml
          path: Cargo.toml

  build-for-linux:
    needs:
      - set-version-file

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get updated Cargo.toml
        uses: actions/download-artifact@v3
        with:
          name: Cargo.toml

      - name: Build
        run: cargo build --release

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: target/release/git-issue

  build-for-macos:
    needs:
      - set-version-file

    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get updated Cargo.toml
        uses: actions/download-artifact@v3
        with:
          name: Cargo.toml

      - name: Build
        run: cargo build --release

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: target/release/git-issue

  build-for-windows:
    needs:
      - set-version-file

    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get updated Cargo.toml
        uses: actions/download-artifact@v3
        with:
          name: Cargo.toml

      - name: Build
        run: cargo build --release

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: target/release/git-issue.exe

  create-release:
    needs:
      - build-for-linux
      - build-for-macos
      - build-for-windows

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-build

      - name: Rename linux artifact
        run: mv git-issue git-issue-linux-amd64
      - name: Get windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Get macos artifact
        uses: actions/download-artifact@v3
        with:
          name: macos-build

      - name: Rename macos artifact
        run: mv git-issue git-issue-macos-amd64
      - name: Get windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Get version
        run: |
          echo version=$GITHUB_HEAD_REF | sed s%release/%% >> $GITHUB_ENV
      - run: find . -type f

      - name: Archive release file
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          files: git-issue*
          generate_release_notes: true

