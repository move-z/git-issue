name: Release

on:
  push:
    branches: [ "9-setup-ci-pipeline" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-for-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: cargo build --release

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: target/release/git-issue

  build-for-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: cargo build --release

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: target/release/git-issue.exe

  create-release:
    needs:
      - build-for-linux
      - build-for-windows

    runs-on: ubuntu-latest

    steps:
      - name: Get linux artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-build
          path: git-issue-amd64

      - name: Get windows artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-build
          path: git-issue.exe

      - name: Get version
        run: |
          echo $(echo -n version= ; grep -oP '(?<=^version = ")(.+)(?=")' Cargo.toml) >> $GITHUB_RUNNER

      - name: Archive release file
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          files: git-issue-*
          generate_release_notes: true

